@page "/randompi"

<PageTitle>Generate Pi Randomly</PageTitle>

<h1>Pi Generator</h1>

<p>This applet generates a random value of Pi using a formula and two random floating point numbers.</p>


<form class="form-check mt-3 mb-3">
    <p>Check to use Rust language.</p>
    <input type="checkbox" @bind="useRust">
</form>

<input type="number" @bind="iterateValue">
<button class="btn btn-primary" name="submit" @onclick="CallGenerator">Submit!</button>

<div class="m-4">
    <p>Generated Value : @resultValue</p>
    <p>Accepted Value : @Math.PI</p>
    <p>Percent Difference : @percentDifference%</p>

    <p>Execution Time: @resultTime</p>
</div>



@code
{
    private int iterateValue;
    private bool useRust = false;
    private DateTime startTime;
    private static TimeSpan resultTime;
    private static double resultValue;

    private static double percentDifference;

    private void CallGenerator()
    {
        startTime = DateTime.Now;

        if (useRust)
        {
            resultValue = GeneratePiRust(iterateValue);
        }
        else
        {
            resultValue = GeneratePi(iterateValue);
        }

        resultTime = DateTime.Now - startTime;
        
        percentDifference = ((resultValue - Math.PI) / (resultValue + Math.PI) ) * 100;
    }


    double GeneratePi(int num)
    {
        Random rng = new Random();
        int pointTotal = 0;
        int pointCircle = 0;

        for (int i = 0; i < num; i++)
        {
            Vector2 arrow = new Vector2(rng.NextSingle(), rng.NextSingle());
            float dist = arrow.Length();

            if (dist <= 1f)
                pointCircle++;
                
            pointTotal++;
        }

        return 4f * ((double) pointCircle / (double) pointTotal);
    }

    //function will call a FFI from Rust that returns the value from a dll library yet to be implemented
    [System.Runtime.InteropServices.DllImport("txt.txt")]//Need to Implement Function
    private static extern double GeneratePiRust(int iterateValue);
}